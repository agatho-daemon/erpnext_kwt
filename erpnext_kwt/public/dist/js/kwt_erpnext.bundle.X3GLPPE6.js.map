{
  "version": 3,
  "sources": ["../../../../../apps/erpnext_kwt/erpnext_kwt/public/js/kwt_address.js", "../../../../../apps/erpnext_kwt/erpnext_kwt/public/js/kwt_contact_address_quick_entry.js"],
  "sourcesContent": ["// Description: Custom script for Address doctype\n// Author: WSQG\n// Version: 0.0.1\n\n// For a Kuwait address, we need to:\n// 1. Use a custom_district field linked to the KWT District doctype\n// 2. Hide the City and County fields, and set the City field from the District field\n// 3. Change the labels of State and Pincode fields to Territory/Governorate and PACI\n// 4. Fetch the Territory/Governorate field value from the District doctype\n\n\nfrappe.ui.form.on('Address', {\n    setup: function(frm) {\n\n        // KWT address settings\n        frm.set_kwt_address = function() {\n            // Required fields\n            frm.set_df_property(\"custom_district\", \"hidden\", 0);\n            // Hidden fields (note 'city' will be set from 'custom_district')\n            frm.set_df_property(\"city\", \"hidden\", 1);\n            frm.set_df_property(\"county\", \"hidden\", 1);\n            // Fields that need to be renamed\n            frm.set_df_property(\"state\", \"label\", \"Governorate\");\n            frm.set_df_property(\"pincode\", \"label\", \"PACI\");\n        }\n\n        // Reset address settings to default\n        frm.reset_address = function() {\n            // Hidden fields\n            frm.set_df_property(\"custom_district\", \"hidden\", 1);\n            // Default fields\n            frm.set_df_property(\"city\", \"hidden\", 0);\n            frm.set_df_property(\"county\", \"hidden\", 0);\n            // Reset fields to their default labels\n            frm.set_df_property(\"state\", \"label\", \"State/Province\");\n            frm.set_df_property(\"pincode\", \"label\", \"Postal Code\");\n        }\n    },\n\n    country: function(frm) {\n        if (frm.doc.country == \"Kuwait\") {\n            frm.set_kwt_address();\n        } else {\n            frm.reset_address();\n        }\n    },\n\n    custom_district: function(frm) {\n        // Set the City (hidden field) from the District\n        let district_value = frm.doc.custom_district;\n        frm.set_value(\"city\", district_value);\n\n        // Fetch the Territory/Governorate from the District\n        frappe.db.get_value(\"KWT District\", frm.doc.custom_district, \"governorate\")\n        .then (record => {\n            if (record.message) {\n                frm.set_value(\"state\", record.message.governorate);\n            }\n        });\n    },\n\n    refresh: function(frm) {\n        if (frm.doc.country == \"Kuwait\") {\n            frm.set_kwt_address();\n        } else {\n            frm.reset_address();\n        }\n    },\n\n})", "frappe.provide('frappe.ui.form');\n\nconst originalGetVariantFields = frappe.ui.form.ContactAddressQuickEntryForm.prototype.get_variant_fields;\nconst originalRenderDialog = frappe.ui.form.ContactAddressQuickEntryForm.prototype.render_dialog;\n\n\n// Override the get_variant_fields method for KWT format\nfrappe.ui.form.ContactAddressQuickEntryForm.prototype.get_variant_fields = function() {\n        var variant_fields = [{\n            fieldtype: \"Section Break\",\n            label: __(\"Primary Contact Details\"),\n            collapsible: 1\n        },\n        {\n            label: __(\"Email Id\"),\n            fieldname: \"email_address\",\n            fieldtype: \"Data\",\n            options: \"Email\"\n        },\n        {\n            fieldtype: \"Column Break\"\n        },\n        {\n            label: __(\"Mobile Number\"),\n            fieldname: \"mobile_number\",\n            fieldtype: \"Data\"\n        },\n        {\n            fieldtype: \"Section Break\",\n            label: __(\"Primary Address Details\"),\n            collapsible: 1\n        },\n        {\n            label: __(\"Country\"),\n            fieldname: \"country\",\n            fieldtype: \"Link\",\n            options: \"Country\",\n            default: \"Kuwait\",\n            reqd: 1\n        },\n        {\n            label: __(\"Address Line 1\"),\n            fieldname: \"address_line1\",\n            fieldtype: \"Data\",\n            reqd: 1\n        },\n        {\n            label: __(\"Address Line 2\"),\n            fieldname: \"address_line2\",\n            fieldtype: \"Data\"\n        },\n        {\n            fieldtype: \"Column Break\"\n        },\n        {\n            label: __(\"District\"),\n            fieldname: \"custom_district\",\n            fieldtype: \"Link\",\n            options: \"KWT District\",\n            reqd: 1,\n            hidden: 0\n        },\n        {\n            label: __(\"City/Town\"),\n            fieldname: \"city\",\n            fieldtype: \"Data\",\n            reqd: 1,\n            hidden: 1\n        },\n        {\n            label: __(\"Governorate\"),\n            fieldname: \"state\",\n            fieldtype: \"Data\"\n        },\n        {\n            label: __(\"PACI\"),\n            fieldname: \"pincode\",\n            fieldtype: \"Data\"\n        },\n        {\n            label: __(\"Customer POS Id\"),\n            fieldname: \"customer_pos_id\",\n            fieldtype: \"Data\",\n            hidden: 1\n        }];\n    \n        return variant_fields;    \n};\n\n\nfrappe.ui.form.ContactAddressQuickEntryForm.prototype.render_dialog = function() {\n    // Call original render_dialog\n    originalRenderDialog.apply(this);\n\n    // Attach onchange handler to country field\n    if (this.dialog.fields_dict.country) {\n        this.dialog.fields_dict.country.df.onchange = () => {\n            this.country_changed();\n        };\n    }\n\n    // Attach onchange handler to custom_district field\n    if (this.dialog.fields_dict.custom_district) {\n        this.dialog.fields_dict.custom_district.df.onchange = () => {\n            this.custom_district_changed();\n        };\n    }\n};\n\nfrappe.ui.form.ContactAddressQuickEntryForm.prototype.custom_district_changed = function() {\n    let custom_district_value = this.dialog.get_value('custom_district');\n    if (custom_district_value) {\n        // Fetch Governorate based on custom_district value\n        frappe.db.get_value('KWT District', custom_district_value, 'governorate')\n            .then(r => {\n                if (r.message) {\n                    // Set Governorate value\n                    this.dialog.set_value('state', r.message.governorate);\n                    // As well as hidden city field value\n                    this.dialog.set_value('city', custom_district_value);\n                }\n            });\n    }\n};\n\nfrappe.ui.form.ContactAddressQuickEntryForm.prototype.country_changed = function() {\n    let country = this.dialog.get_value('country');\n\n    // If country is NOT Kuwait, carry on changes\n    if (country !== 'Kuwait') {\n        this.dialog.set_df_property('custom_district', 'hidden', 1);\n        this.dialog.set_df_property('city', 'hidden', 0);\n        this.dialog.set_df_property('state', 'label', 'State/Province');\n        this.dialog.set_df_property('pincode', 'label', 'Postal Code');\n    }\n};\n"],
  "mappings": "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",
  "names": ["frm", "district_value", "record", "originalGetVariantFields", "originalRenderDialog", "variant_fields", "custom_district_value", "r"]
}
